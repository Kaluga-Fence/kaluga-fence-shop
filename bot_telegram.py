# bot_telegram.py
import sqlite3
import time
import requests
import os
from datetime import datetime

# ============= –ù–ê–°–¢–†–û–ô–ö–ò =============
BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù"  # ‚Üê –ó–∞–º–µ–Ω–∏! –ü–æ–ª—É—á–∏ —É @BotFather
CHAT_ID = "–í–ê–®_CHAT_ID"  # ‚Üê –ó–∞–º–µ–Ω–∏! –£–∑–Ω–∞–π —á–µ—Ä–µ–∑ @userinfobot –∏–ª–∏ /getUpdates
DB_PATH = "db.sqlite3"   # –ü—É—Ç—å –∫ –±–∞–∑–µ Django (–µ—Å–ª–∏ –Ω–∞ Render ‚Äî –º–æ–∂–µ—Ç –±—ã—Ç—å –¥—Ä—É–≥–∏–º)
CHECK_INTERVAL = 10      # –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
# ====================================

def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": CHAT_ID,
        "text": text,
        "parse_mode": "HTML",
        "disable_web_page_preview": True
    }
    try:
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print(f"[{datetime.now().strftime('%H:%M:%S')}] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            print(f"[–û—à–∏–±–∫–∞] Telegram API: {response.status_code}")
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ —Å–µ—Ç–∏] {e}")

def get_new_orders(last_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∏–∑ –±–∞–∑—ã"""
    try:
        conn = sqlite3.connect(DB_PATH)
        conn.row_factory = sqlite3.Row  # –ß—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –∏–º–µ–Ω–∏ –∫–æ–ª–æ–Ω–∫–∏
        cur = conn.cursor()

        cur.execute("SELECT id, name, phone, address, comment, created_at FROM shop_order WHERE id > ? ORDER BY id", (last_id,))
        rows = cur.fetchall()
        conn.close()

        return rows
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ –ë–î] –ù–µ –º–æ–≥—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å db.sqlite3: {e}")
        return []

def format_order_message(order):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ"""
    created = datetime.strptime(order['created_at'], "%Y-%m-%d %H:%M:%S.%f%z") if '.' in order['created_at'] else order['created_at']
    return (
        f"üì¶ <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó #{order['id']}</b>\n"
        f"üë§ <b>–ò–º—è:</b> {order['name']}\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order['phone']}\n"
        f"üì¨ <b>–ê–¥—Ä–µ—Å:</b> {order['address']}\n"
        f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {order['comment'] or '–Ω–µ—Ç'}\n"
        f"‚è∞ <b>–í—Ä–µ–º—è:</b> {created.strftime('%H:%M %d.%m.%Y')}"
    )

def main():
    print("üöÄ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤...")

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π ID –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    last_order_id = 0
    try:
        conn = sqlite3.connect(DB_PATH)
        cur = conn.cursor()
        cur.execute("SELECT IFNULL(MAX(id), 0) FROM shop_order")
        last_order_id = cur.fetchone()[0]
        conn.close()
        print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ ID: {last_order_id}. –ù–∞—á–∏–Ω–∞—é —Å–ª—É—à–∞—Ç—å...")
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ: {e}")
        return

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while True:
        new_orders = get_new_orders(last_order_id)
        for order in new_orders:
            message = format_order_message(order)
            send_telegram_message(message)
            last_order_id = order['id']  # –û–±–Ω–æ–≤–ª—è–µ–º ID
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()
