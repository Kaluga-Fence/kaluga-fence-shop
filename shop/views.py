from django.shortcuts import render, get_object_or_404, redirect
from django.contrib import messages
from django.conf import settings
import requests
from .models import Product, Order
from .forms import OrderForm

def home(request):
    panels = Product.objects.filter(category='panel')[:3]
    gabions = Product.objects.filter(category='gabion')[:3]
    return render(request, 'shop/home.html', {'panels': panels, 'gabions': gabions})

def catalog(request):
    products = Product.objects.filter(available=True)
    return render(request, 'shop/catalog.html', {'products': products})

def product_detail(request, id):
    product = get_object_or_404(Product, id=id)
    return render(request, 'shop/product_detail.html', {'product': product})

def cart(request):
    cart_ids = request.session.get('cart', [])
    products = Product.objects.filter(id__in=cart_ids)
    total = sum(p.price for p in products)
    return render(request, 'shop/cart.html', {'products': products, 'total': total})

def add_to_cart(request, id):
    cart = request.session.get('cart', [])
    if id not in cart:
        cart.append(id)
        request.session['cart'] = cart
        messages.success(request, "–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")
    return redirect('catalog')

def remove_from_cart(request, id):
    cart = request.session.get('cart', [])
    if id in cart:
        cart.remove(id)
        request.session['cart'] = cart
    return redirect('cart')

def checkout(request):
    cart_ids = request.session.get('cart', [])
    if not cart_ids:
        messages.error(request, "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!")
        return redirect('catalog')

    if request.method == "POST":
        form = OrderForm(request.POST)
        if form.is_valid():
            order = form.save()
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
            send_telegram_message(order, request.session.get('cart'))
            # –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
            request.session['cart'] = []
            messages.success(request, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑, {order.name}! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
            return redirect('home')
    else:
        form = OrderForm()

    products = Product.objects.filter(id__in=cart_ids)
    total = sum(p.price for p in products)
    return render(request, 'shop/checkout.html', {'form': form, 'total': total, 'products': products})

def send_telegram_message(order, cart_ids):
    # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID
    BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù"
    CHAT_ID = "–í–ê–®_CHAT_ID"
    
    product_names = [p.name for p in Product.objects.filter(id__in=cart_ids)]
    message = (
        f"üì¶ <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b>\n"
        f"–ò–º—è: {order.name}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {order.phone}\n"
        f"–ê–¥—Ä–µ—Å: {order.address}\n"
        f"–¢–æ–≤–∞—Ä—ã: {', '.join(product_names)}\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order.comment or '–Ω–µ—Ç'}\n"
        f"–í—Ä–µ–º—è: {order.created_at.strftime('%H:%M %d.%m.%Y')}"
    )
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": message, "parse_mode": "HTML"}
    try:
        requests.post(url, data=data)
    except:
        pass
